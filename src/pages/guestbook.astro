---
import { getEntry } from "astro:content";
import { ulid } from "ulid";

import Footer from "@/components/Footer/Footer.astro";
import Navbar from "@/components/Navbar/Navbar.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { db } from "@/lib/db";
import { notesTable } from "@/lib/schema";
import { eq } from "drizzle-orm";

const errorMessage = { message: "" };
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const content = data.get("content");
    const username = data.get("username");

    if (typeof content !== "string") {
      errorMessage.message = "Content is not a string";
      return;
    } else if (typeof username !== "string") {
      errorMessage.message = "Username is not a string";
      return;
    }

    // Check if there is already a note with the same username
    const existingNote = await db.query.notesTable.findFirst({
      where: eq(notesTable.username, username),
    });

    if (existingNote) {
      const result = await db
        .update(notesTable)
        .set({
          content: content,
        })
        .where(eq(notesTable.id, existingNote.id));
    } else {
      const result = await db.insert(notesTable).values({
        content: content!,
        username: username,
        id: ulid(),
      });
    }
  } catch (error) {
    console.error(error);
  }
}

const guestbook = await getEntry("guestbook", "data");
const guestbookEntries = await db.query.notesTable.findMany();

const user = Astro.locals.user;

let loggedIn = true;
if (!user) {
  loggedIn = false;
}
---

<BaseLayout title={guestbook.data.title}>
  <main class="flex h-dvh flex-col justify-between p-5">
    <div class="flex flex-col gap-10">
      <Navbar />
      <h2 class="text-3xl font-semibold">Guestbook</h2>
      {
        loggedIn ? (
          <div class="flex flex-col gap-10">
            {/* Logout button */}
            <div>
              <p>Welcome, {user?.username}!</p>
            </div>
            <form method="POST" class="flex flex-row gap-2">
              <input
                type="text"
                name="content"
                id=""
                placeholder="Your message..."
                class="rounded-sm border-b-2 bg-transparent p-2 focus:outline-none"
                required
              />
              <small>{errorMessage.message}</small>
              <input type="hidden" name="username" value={user?.username} />
              <button class="rounded-sm bg-surface0 px-4 py-2" type="submit">
                Submit
              </button>
            </form>
            <form method="post" action="/api/logout">
              <button>Sign out</button>
            </form>
          </div>
        ) : (
          <div class="flex flex-col gap-10">
            <a
              href="/login/github"
              class="bg-primary w-full rounded-md text-text"
            >
              Login
            </a>
          </div>
        )
      }
      <div>
        {
          guestbookEntries.map((entry) => {
            return (
              <div class="flex flex-col gap-5">
                <p class="text-lg">{entry.username}</p>
                <p class="text-lg">{entry.content}</p>
              </div>
            );
          })
        }
      </div>
    </div>
    <Footer />
  </main>
</BaseLayout>
